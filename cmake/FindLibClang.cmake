SET(LIBCLANG_PATH "" CACHE PATH "Base path for include and lib")
SET(LIBCLANG_INCLUDE_PATH "" CACHE PATH "Include path for clang .h files")
SET(LIBCLANG_LIBDIR "" CACHE PATH "Path containing libclang")

IF(LIBCLANG_PATH)
	SET(LIBCLANG_INCLUDE_PATH "${LIBCLANG_PATH}/include" CACHE PATH "Include path for clang .h" FORCE)
	SET(LIBCLANG_LIBDIR "${LIBCLANG_PATH}/lib" CACHE PATH "Path containing clang" FORCE)
ENDIF(LIBCLANG_PATH)

IF(LIBCLANG_INCLUDE_PATH)
	INCLUDE_DIRECTORIES(${LIBCLANG_INCLUDE_PATH})
ENDIF(LIBCLANG_INCLUDE_PATH)

# Use cached result
IF(NOT LIBCLANG_FOUND)
	UNSET(HAVE_INDEX_H)
	UNSET(HAVE_LIBCLANG)
	UNSET(HAVE_INDEX_H CACHE)
	UNSET(HAVE_LIBCLANG CACHE)
	UNSET(LIBCLANG_CFLAGS)
	UNSET(LIBCLANG_LDFLAGS)

	IF(LIBCLANG_INCLUDE_PATH OR LIBCLANG_LIBDIR)
		SET(CMAKE_REQUIRED_INCLUDES ${LIBCLANG_INCLUDE_PATH})
# 		MESSAGE(STATUS "Looking for ev.h in ${CMAKE_REQUIRED_INCLUDES}")
		CHECK_INCLUDE_FILES(clang-c/Index.h HAVE_INDEX_H)
		IF(HAVE_INDEX_H)
# 			MESSAGE(STATUS "Looking for lib ev in ${LIBCLANG_LIBDIR}")
			CHECK_LIBRARY_EXISTS(ev ev_time "${LIBCLANG_LIBDIR}" HAVE_LIBCLANG)
			IF(HAVE_LIBCLANG)
				SET(LIBCLANG_LIBRARIES ev CACHE INTERNAL "")
				SET(LIBCLANG_CFLAGS "" CACHE INTERNAL "")
				SET(LIBCLANG_LDFLAGS "-L${LIBCLANG_LIBDIR} -lclang" CACHE INTERNAL "")
				SET(LIBCLANG_FOUND TRUE CACHE INTERNAL "Found libev" FORCE)
			ELSE(HAVE_LIBCLANG)
				MESSAGE(STATUS "Couldn't find libclang in ${LIBCLANG_LIBDIR}")
			ENDIF(HAVE_LIBCLANG)
		ELSE(HAVE_INDEX_H)
			MESSAGE(STATUS "Couldn't find <clang-c/Index.h> in ${LIBCLANG_INCLUDE_PATH}")
		ENDIF(HAVE_INDEX_H)
	ELSE(LIBCLANG_INCLUDE_PATH OR LIBCLANG_LIBDIR)
		pkg_check_modules(LIBCLANG libev)
		IF(NOT LIBCLANG_FOUND)
			CHECK_INCLUDE_FILES(ev.h HAVE_INDEX_H)
			IF(HAVE_INDEX_H)
				CHECK_LIBRARY_EXISTS(clang clang_createIndex "" HAVE_LIBCLANG)
				IF(HAVE_LIBCLANG)
					SET(LIBCLANG_CFLAGS "" CACHE INTERNAL "")
					SET(LIBCLANG_LDFLAGS "-lclang" CACHE INTERNAL "")
					SET(LIBCLANG_FOUND TRUE CACHE INTERNAL "Found libclang" FORCE)
				ELSE(HAVE_LIBCLANG)
					MESSAGE(STATUS "Couldn't find libclang")
				ENDIF(HAVE_LIBCLANG)
			ELSE(HAVE_INDEX_H)
				MESSAGE(STATUS "Couldn't find <clang-c/Index.h>")
			ENDIF(HAVE_INDEX_H)
		ENDIF(NOT LIBCLANG_FOUND)
	ENDIF(LIBCLANG_INCLUDE_PATH OR LIBCLANG_LIBDIR)

ENDIF(NOT LIBCLANG_FOUND)

IF(NOT LIBCLANG_FOUND)
	IF(LibEV_FIND_REQUIRED)
		MESSAGE(FATAL_ERROR "Could not find libclang")
	ENDIF(LibEV_FIND_REQUIRED)
ENDIF(NOT LIBCLANG_FOUND)

MARK_AS_ADVANCED(LIBCLANG_PATH LIBCLANG_INCLUDE_PATH LIBCLANG_LIBDIR)
